import React from 'react'
import { Svg, SvgProps } from '@doodaswap/uikit'
// import { SvgProps } from '../types'

interface LogoProps extends SvgProps {
  isDark: boolean
}

const DoodaTextOnlyLogo: React.FC<LogoProps> = ({ isDark, ...props }) => {
  // const textColor = isDark ? "#FFFFFF" : "#000000";
  const textColor = '#3763A4'
  return (
    <Svg viewBox="0 0 200 26" {...props}>
      {/* <path
        d="M12.6407 20.9735H9.29126V17.9913H12.2758C15.0288 17.9913 17.6297 15.7529 17.6297 13C17.6297 10.247 15.0288 8.01096 12.2758 8.01096H9.29126V5.02643H12.6407C14.7554 5.02643 16.7835 5.8665 18.2788 7.36183C19.7741 8.85716 20.6142 10.8853 20.6142 13C20.6142 15.1147 19.7741 17.1428 18.2788 18.6381C16.7835 20.1335 14.7554 20.9735 12.6407 20.9735Z"
        fill={textColor}
      />
      <path
        d="M12.6407 26H2.84741V17.9914H5.83194V23.0178H12.6407C15.2708 22.9776 17.7795 21.9046 19.6252 20.0305C21.4709 18.1564 22.5054 15.6315 22.5054 13.0012C22.5054 10.3708 21.4709 7.84595 19.6252 5.97183C17.7795 4.09772 15.2708 3.02472 12.6407 2.98453H5.83194V8.01097H2.84741V0H12.6407C16.0885 0 19.3951 1.36964 21.8331 3.80761C24.271 6.24558 25.6407 9.55219 25.6407 13C25.6407 16.4478 24.271 19.7544 21.8331 22.1924C19.3951 24.6304 16.0885 26 12.6407 26Z"
        fill={textColor}
      />
      <path d="M7.3967 11.5078H0.8125V14.4923H7.3967V11.5078Z" fill={textColor} />
      <path d="M12.2758 7.04962H9.29126V19.5514H12.2758V7.04962Z" fill={textColor} /> */}

      {/* text */}
      <svg width="130" height="30" viewBox="-17 -5 30 25" fill="#000" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M5.47995 0.678955C7.2304 0.678955 8.54839 1.1625 9.43392 2.12958C10.3921 3.28217 10.8719 4.75781 10.7746 6.25303C10.8697 7.74608 10.3901 9.21901 9.43392 10.3703C8.54427 11.3456 7.22628 11.8333 5.47995 11.8333H0V0.678955H5.47995ZM4.91775 9.02465C5.19985 9.06231 5.48686 9.01972 5.74585 8.9018C6.00484 8.78388 6.2253 8.59539 6.38195 8.35797C6.66602 7.69431 6.79084 6.97347 6.74645 6.25303C6.79084 5.53259 6.66602 4.81175 6.38195 4.14809C6.2253 3.91066 6.00484 3.72219 5.74585 3.60427C5.48686 3.48635 5.19985 3.44377 4.91775 3.48143H3.9169V9.03698L4.91775 9.02465Z"
          fill="#3763A4"
        />
        <path
          d="M16.0259 3.20985C16.8786 3.19104 17.7241 3.36845 18.4971 3.72837C19.1816 4.054 19.7553 4.57348 20.1467 5.2222C20.5687 5.94426 20.7826 6.76893 20.7645 7.60491C20.7808 8.43873 20.567 9.26095 20.1467 9.98146C19.7577 10.6352 19.1838 11.1593 18.4971 11.4876C17.7228 11.8431 16.8779 12.0183 16.0259 12C15.1741 12.0174 14.3293 11.8423 13.5547 11.4876C12.8635 11.1613 12.285 10.637 11.8928 9.98146C11.4724 9.26095 11.2587 8.43873 11.275 7.60491C11.2569 6.76893 11.4707 5.94426 11.8928 5.2222C12.2875 4.57166 12.8656 4.052 13.5547 3.72837C14.3277 3.36845 15.1733 3.19104 16.0259 3.20985ZM16.0259 5.83331C15.868 5.83106 15.7138 5.88098 15.5873 5.97529C15.4387 6.11685 15.3409 6.30344 15.3093 6.50614C15.2382 6.86791 15.2071 7.23637 15.2166 7.60491C15.2065 7.97142 15.2376 8.33793 15.3093 8.69751C15.3427 8.89964 15.4401 9.08572 15.5873 9.22837C15.7097 9.33169 15.8657 9.3866 16.0259 9.38269C16.1903 9.38969 16.3513 9.33459 16.4769 9.22837C16.6198 9.08339 16.7147 8.8981 16.7488 8.69751C16.8204 8.33793 16.8515 7.97142 16.8414 7.60491C16.8509 7.23637 16.8198 6.86791 16.7488 6.50614C16.7162 6.30504 16.6211 6.1193 16.4769 5.97529C16.347 5.87835 16.188 5.82829 16.0259 5.83331Z"
          fill="#3763A4"
        />
        <path
          d="M25.7934 3.20985C26.6461 3.19104 27.4916 3.36845 28.2647 3.72837C28.9492 4.054 29.5228 4.57348 29.9142 5.2222C30.3362 5.94426 30.5501 6.76893 30.532 7.60491C30.5486 8.43877 30.3348 9.26107 29.9142 9.98146C29.5252 10.6352 28.9513 11.1593 28.2647 11.4876C27.4902 11.8425 26.6453 12.0177 25.7934 12C24.9416 12.0172 24.0968 11.8421 23.3222 11.4876C22.6316 11.1628 22.0547 10.6381 21.6665 9.98146C21.2461 9.26095 21.0324 8.43873 21.0487 7.60491C21.0306 6.76893 21.2444 5.94426 21.6665 5.2222C22.0569 4.57043 22.6335 4.05019 23.3222 3.72837C24.0952 3.36845 24.9408 3.19104 25.7934 3.20985ZM25.7934 5.83331C25.6335 5.83016 25.4771 5.8801 25.3486 5.97529C25.2 6.11685 25.1023 6.30344 25.0706 6.50614C24.9995 6.86791 24.9685 7.23637 24.9779 7.60491C24.9678 7.97142 24.9989 8.33793 25.0706 8.69752C25.104 8.89964 25.2014 9.08572 25.3486 9.22837C25.4729 9.33262 25.6312 9.38755 25.7934 9.38269C25.9563 9.39194 26.1162 9.33646 26.2382 9.22837C26.3811 9.08339 26.476 8.8981 26.5101 8.69752C26.5818 8.33793 26.6129 7.97142 26.6028 7.60491C26.6122 7.23637 26.5811 6.86791 26.5101 6.50614C26.4776 6.30504 26.3824 6.1193 26.2382 5.97529C26.1107 5.87835 25.9536 5.82821 25.7934 5.83331Z"
          fill="#3763A4"
        />
        <path
          d="M34.1894 12C33.5634 12.0164 32.9479 11.8373 32.4286 11.4876C31.9234 11.1108 31.5408 10.5933 31.3289 9.99999C31.0647 9.24686 30.9391 8.45216 30.9582 7.65432C30.9386 6.83527 31.0684 6.01949 31.3413 5.24691C31.5552 4.64623 31.9394 4.12073 32.4472 3.73456C32.9639 3.37821 33.5803 3.19452 34.2079 3.20986C34.5644 3.18984 34.9208 3.25178 35.2496 3.3909C35.5784 3.53001 35.8709 3.74261 36.1046 4.01235C36.562 4.59811 36.8485 5.2988 36.9324 6.03704L36.5926 6.54319V0H40.4848V11.8333H36.9819L36.7471 8.41974L37.1857 8.9074C37.1296 9.46634 36.966 10.0092 36.7038 10.5062C36.4674 10.9561 36.1156 11.3353 35.6845 11.6049C35.2343 11.8772 34.7153 12.0143 34.1894 12ZM35.7648 9.27778C35.8467 9.27988 35.9282 9.26567 36.0046 9.23599C36.0809 9.20632 36.1506 9.16178 36.2096 9.10494C36.3472 8.9482 36.4429 8.75919 36.4876 8.55555C36.5636 8.24454 36.5989 7.925 36.5926 7.60492C36.5964 7.29819 36.5674 6.99195 36.5062 6.69136C36.4697 6.4843 36.3754 6.29173 36.2343 6.13578C36.1735 6.07363 36.1003 6.02502 36.0193 5.99311C35.9384 5.96119 35.8517 5.94671 35.7648 5.95061C35.643 5.95122 35.5232 5.9813 35.4156 6.03828C35.308 6.09525 35.2158 6.17743 35.147 6.27777C34.9449 6.68924 34.8615 7.14877 34.906 7.60492C34.8631 8.065 34.9464 8.5281 35.147 8.94444C35.2138 9.04582 35.3045 9.12923 35.4112 9.18735C35.5178 9.24548 35.6371 9.27654 35.7586 9.27778H35.7648Z"
          fill="#3763A4"
        />
        <path
          d="M46.1934 6.56174C46.2085 6.34223 46.1474 6.12422 46.0204 5.94446C45.9521 5.86756 45.8669 5.80749 45.7715 5.76894C45.6761 5.73039 45.5731 5.71442 45.4705 5.72224C45.2459 5.70723 45.0243 5.78029 44.8527 5.92594C44.66 6.15218 44.5626 6.44424 44.5809 6.74076L41.3003 6.26546C41.3279 5.82569 41.4531 5.39756 41.6668 5.01213C41.8805 4.62669 42.1774 4.29361 42.5359 4.03705C43.4824 3.42139 44.6031 3.12899 45.73 3.20372C46.5584 3.17656 47.3839 3.31508 48.158 3.61113C48.7372 3.83481 49.2334 4.23141 49.5789 4.74693C49.8948 5.25166 50.0579 5.8369 50.0485 6.43212V9.05557C50.0485 9.51854 50.2647 9.74693 50.7034 9.74693C50.8025 9.75056 50.9014 9.73375 50.9937 9.69755L50.8269 11.6914C50.354 11.9053 49.8384 12.0088 49.3195 11.9939C48.838 12.003 48.3588 11.9256 47.9047 11.7655C47.5228 11.6339 47.1878 11.3936 46.9409 11.0741C46.6997 10.7248 46.5783 10.3068 46.5949 9.88273V9.70989H46.9656C46.9572 10.1313 46.8119 10.5386 46.5517 10.8704C46.2719 11.2261 45.9092 11.508 45.4952 11.6914C45.0211 11.9015 44.5064 12.0048 43.9878 11.9939C43.47 12.007 42.955 11.9146 42.4742 11.7222C42.0899 11.5635 41.7625 11.2923 41.5351 10.9445C41.3158 10.5841 41.2044 10.1686 41.2138 9.74693C41.2064 9.46585 41.2575 9.1863 41.3639 8.92597C41.4702 8.66564 41.6295 8.43021 41.8316 8.23459C42.3111 7.80543 42.9062 7.52638 43.543 7.43211L46.4837 6.81483V8.1852L45.5756 8.40743C45.3782 8.43982 45.1976 8.53766 45.0628 8.6852C44.9608 8.8246 44.9086 8.99413 44.9145 9.16668C44.9102 9.32901 44.9702 9.48648 45.0813 9.60497C45.1444 9.6646 45.2194 9.71026 45.3014 9.73898C45.3834 9.7677 45.4705 9.77882 45.557 9.77163C45.6461 9.77405 45.7346 9.75721 45.8165 9.72225C45.9018 9.69213 45.9783 9.6412 46.0389 9.57409C46.1028 9.50243 46.1511 9.41837 46.181 9.32718C46.2178 9.22003 46.2345 9.10704 46.2304 8.99384L46.1934 6.56174Z"
          fill="#3763A4"
        />
      </svg>
    </Svg>
  )
}

export default React.memo(DoodaTextOnlyLogo, (prev, next) => prev.isDark === next.isDark)
